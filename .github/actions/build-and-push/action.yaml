name: 'Setup ENV'
description: 'prepare GKE and Helm and GO'
inputs:
  GH_BOT_TOKEN:
    description: 'github bot token'
    required: true
    default: ''
  DEPLOY_ENVIRONMENT:
    description: 'environment to deploy. default is develop'
    required: false
    default: 'develop'
  WITH_UNITTEST:
    description: 'runw ith unittest'
    required: false
    default: 'false'
outputs:
  file_prefix:
    description: "file prefix to be used in actions"
    value: ${{ steps.setup-vars.outputs.file_prefix }}
runs:
  using: "composite"
  steps:
  - id: 'setup-vars'
    name: Configuration for dev branch (default)
    run: |
      if [[ "${{ inputs.DEPLOY_ENVIRONMENT }}" == "loadtesting" ]]; then
        echo "PROJECT_ID=egosys-dev" >> $GITHUB_ENV
      elif  [[ "${{ inputs.DEPLOY_ENVIRONMENT }}" == "production" ]]; then
        echo "PROJECT_ID=egosys-prod" >> $GITHUB_ENV
      else
        echo "PROJECT_ID=egosys-dev" >> $GITHUB_ENV
      fi
    shell: bash

  - name: Get repo name as image
    run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
    shell: bash

  - name: cache setup
    uses: actions/cache@v3
    with:
      path: |
        ~/.cache/go-build
        ~/go/pkg/mod
      key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      restore-keys: |
        ${{ runner.os }}-go-

  - run: git config --global url."https://${{inputs.GH_BOT_TOKEN}}@github.com".insteadOf "https://github.com"
    shell: bash

  - id: 'unittest'
    shell: bash
    run: make unittest
    if: "${{ inputs.WITH_UNITTEST }} == 'true'"

  - run: make build
    shell: bash

    # Build the Docker image
  - name: Build
    run: |-
      docker build \
        --tag "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:$GITHUB_SHA" \
        --tag "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:latest" \
        .
    shell: bash

    # Push the Docker image to Google Container Registry
  - name: Publish
    run: |-
      docker push "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:$GITHUB_SHA" &&  \
      docker push "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:latest"
    shell: bash
