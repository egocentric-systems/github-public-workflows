name: Build and Deploy to GKE

on:
  push:
    branches:
      - dev
      - main

env:
  GOPRIVATE: "github.com/egocentric-systems/*"
  CGO_ENABLED: 0

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: develop
    steps:
    - name: Get repo name as image
      run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    # I only need to declare environment variables once at the beginning
    - name: Configuration for main branch
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        echo "GCP_SERVICE_ACCOUNT=${{ secrets.GKE_EGOSYS_DEV_DEPLOYMENT_SERVICE_ACCOUNT_JSON }}" >> $GITHUB_ENV
        echo "GKE_CLUSTER=egosys-dev" >> $GITHUB_ENV
        echo "GKE_ZONE=europe-west3" >> $GITHUB_ENV
        echo "PROJECT_ID=egosys-dev" >> $GITHUB_ENV
        echo "HELM_VALUE_FILE=values.prod.yaml" >> $GITHUB_ENV

    - name: Configuration for dev branch
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: |
        echo "GCP_SERVICE_ACCOUNT=${{ secrets.GKE_EGOSYS_DEV_DEPLOYMENT_SERVICE_ACCOUNT_JSON }}" >> $GITHUB_ENV
        echo "GKE_CLUSTER=egosys-dev" >> $GITHUB_ENV
        echo "GKE_ZONE=europe-west3" >> $GITHUB_ENV
        echo "PROJECT_ID=egosys-dev" >> $GITHUB_ENV
        echo "PROJECT_ID=egosys-dev" >> $GITHUB_ENV
        echo "HELM_VALUE_FILE=values.dev.yaml" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v3

    - uses: ppbs2/ms-teams-deploy-card@master
      if: always()
      with:
        github-token: ${{ secrets.GH_BOT_TOKEN }}
        webhook-uri: ${{ secrets.MS_TEAMS_DEPLOYMENT_CHANNEL_WEBHOOK }}
        card-layout-start: cozy
        card-layout-exit: cozy

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.18'
        check-latest: true
    
    - run: git config --global url."https://${{secrets.GH_BOT_TOKEN}}@github.com".insteadOf "https://github.com"
    - run: make build

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:$GITHUB_SHA" \
          --tag "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:latest" \
          .

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ env.GCP_SERVICE_ACCOUNT }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ env.PROJECT_ID }}

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:$GITHUB_SHA" &&  \
        docker push "gcr.io/$PROJECT_ID/${{ env.REPO_NAME }}:latest"

    - uses: azure/setup-helm@v3

    - name: deploy app
      shell: bash
      run: helm upgrade --install ${{ env.REPO_NAME }} --namespace=ticketing --values=deploy/charts/${{ env.REPO_NAME }}/${{ env.HELM_VALUE_FILE }} --set=imageTag=$GITHUB_SHA --version=1.0.0-$GITHUB_SHA deploy/charts/${{ env.REPO_NAME }}

